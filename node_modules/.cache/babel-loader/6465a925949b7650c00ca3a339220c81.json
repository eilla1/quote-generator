{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ellaxu/Documents/GitHub/quote-generator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/ellaxu/Documents/GitHub/quote-generator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/ellaxu/Documents/GitHub/quote-generator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ellaxu/Documents/GitHub/quote-generator/src/App.js\";\nimport React, { useState } from \"react\";\nimport \"./styles.css\";\nconst url = \"https://type.fit/api/quotes\";\nexport default function App() {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        quotes = _useState2[0],\n        setQuotes = _useState2[1];\n\n  function getQuotes() {\n    return _getQuotes.apply(this, arguments);\n  }\n\n  function _getQuotes() {\n    _getQuotes = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return fetch(url);\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            data = _context.sent;\n            setQuotes(data);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n    return _getQuotes.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"Quotes Generator\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"quotes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"This is a quote\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"- author name\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"New Quote\"));\n}","map":{"version":3,"sources":["/Users/ellaxu/Documents/GitHub/quote-generator/src/App.js"],"names":["React","useState","url","App","quotes","setQuotes","getQuotes","fetch","res","json","data","console","log"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,cAAP;AAEA,MAAMC,GAAG,GAAG,6BAAZ;AAGA,eAAe,SAASC,GAAT,GAAe;AAAA,oBACAF,QAAQ,CAAC,EAAD,CADR;AAAA;AAAA,QACrBG,MADqB;AAAA,QACbC,SADa;;AAAA,WAGbC,SAHa;AAAA;AAAA;;AAAA;AAAA,0EAG5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEsBC,KAAK,CAACL,GAAD,CAF3B;;AAAA;AAEUM,YAAAA,GAFV;AAAA;AAAA,mBAGuBA,GAAG,CAACC,IAAJ,EAHvB;;AAAA;AAGUC,YAAAA,IAHV;AAIIL,YAAAA,SAAS,CAACK,IAAD,CAAT;AAJJ;AAAA;;AAAA;AAAA;AAAA;AAMIC,YAAAA,OAAO,CAACC,GAAR;;AANJ;AAAA;AAAA;AAAA;AAAA;AAAA,KAH4B;AAAA;AAAA;;AAa5B,sBAEE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,eAGE;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHF,eAIE;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,CAFF;AAUD","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.css\";\n\nconst url = \"https://type.fit/api/quotes\";\n\n\nexport default function App() {\n  const [quotes, setQuotes] = useState({});\n\n  async function getQuotes() {\n    try {\n      const res = await fetch(url);\n      const data = await res.json();\n      setQuotes(data);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  \n  return (\n\n    <div className=\"App\">\n      <h1 className=\"title\">Quotes Generator</h1>\n      <p className=\"quotes\">This is a quote</p>\n      <p className=\"author\">- author name</p>\n      <button className=\"button\">New Quote</button>\n    </div>\n\n  );\n}\n"]},"metadata":{},"sourceType":"module"}